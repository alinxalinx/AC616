//===========================================================================
// Module name: io_test.v
// 描述: 0.5秒拉高IO电平，0.5秒拉低IO电平
//===========================================================================
`timescale 1ns / 1ps

module io_test (
                  clk,           // 开发板上输入时钟: 50Mhz
                  rst_n,         // 开发板上输入复位按键
                  j3_io,         // 用于控制开发板上J3连接器上的IO
                  j4_io,         // 用于控制开发板上J4连接器上的IO
                  j6_io,         // 用于控制开发板上J6连接器上的IO
                  j7_io         // 用于控制开发板上J7连接器上的IO						
             );
             
//===========================================================================
// PORT declarations
//===========================================================================
input clk;
input rst_n;
output [33:0] j3_io;
output [33:0] j4_io;
output [33:0] j6_io;
output [33:0] j7_io;

//寄存器定义
reg [31:0] timer;    
              
reg [33:0] j3_io_reg;
reg [33:0] j4_io_reg;
reg [33:0] j6_io_reg;
reg [33:0] j7_io_reg;

assign j3_io=j3_io_reg;
assign j4_io=j4_io_reg;
assign j6_io=j6_io_reg;
assign j7_io=j7_io_reg;
//===========================================================================
// 计数器计数:循环计数0~4秒
//===========================================================================
  always @(posedge clk or negedge rst_n)    //检测时钟的上升沿和复位的下降沿
    begin
      if (~rst_n)                           //复位信号低有效
          timer <= 0;                       //计数器清零
      else if (timer == 32'd24_999_999)    //开发板使用的晶振为50MHz，0.5秒计数(50M*0.5-1=24_999_999)
          timer <= 0;                       //计数器计到4秒，计数器清零
      else
		    timer <= timer + 1'b1;            //计数器加1
    end

//===========================================================================
// LED灯控制
//===========================================================================
  always @(posedge clk or negedge rst_n)   //检测时钟的上升沿和复位的下降沿
    begin
      if (~rst_n) begin                    //复位信号低有效
		   j3_io_reg<=0;                     //IO全为低电平
		   j4_io_reg<=0;                     //IO全为低电平
		   j6_io_reg<=0;                     //IO全为低电平  
		   j7_io_reg<=0;                     //IO全为低电平 
      end			
      else if (timer == 32'd24_999_999) begin    //计数器计到1秒，
		   j3_io_reg<=~j3_io_reg;                  //IO电平翻转
		   j4_io_reg<=~j4_io_reg;                  //IO电平翻转
		   j6_io_reg<=~j6_io_reg;                  //IO电平翻转 
		   j7_io_reg<=~j7_io_reg;                  //IO电平翻转 
		end   
    end
    
endmodule

